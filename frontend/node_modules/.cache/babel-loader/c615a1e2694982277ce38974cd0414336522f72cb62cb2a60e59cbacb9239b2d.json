{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000/api';\n\n// Generic API request function\nconst apiRequest = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      ...options.headers\n    },\n    ...options\n  };\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\n\n// Auth API\nexport const authAPI = {\n  login: credentials => apiRequest('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials)\n  }),\n  register: userData => apiRequest('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  }),\n  getProfile: () => apiRequest('/auth/profile'),\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};\n\n// HR API\nexport const hrAPI = {\n  getEmployees: () => apiRequest('/hr/employees'),\n  getEmployee: id => apiRequest(`/hr/employees/${id}`),\n  createEmployee: employeeData => apiRequest('/hr/employees', {\n    method: 'POST',\n    body: JSON.stringify(employeeData)\n  }),\n  updateEmployee: (id, employeeData) => apiRequest(`/hr/employees/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(employeeData)\n  }),\n  deleteEmployee: id => apiRequest(`/hr/employees/${id}`, {\n    method: 'DELETE'\n  }),\n  getDepartments: () => apiRequest('/hr/departments'),\n  getAttendance: employeeId => apiRequest(employeeId ? `/hr/attendance/${employeeId}` : '/hr/attendance')\n};\n\n// Inventory API\nexport const inventoryAPI = {\n  getProducts: () => apiRequest('/inventory/products'),\n  getProduct: id => apiRequest(`/inventory/products/${id}`),\n  createProduct: productData => apiRequest('/inventory/products', {\n    method: 'POST',\n    body: JSON.stringify(productData)\n  }),\n  updateProduct: (id, productData) => apiRequest(`/inventory/products/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(productData)\n  }),\n  deleteProduct: id => apiRequest(`/inventory/products/${id}`, {\n    method: 'DELETE'\n  }),\n  getCategories: () => apiRequest('/inventory/categories'),\n  getStockAlerts: () => apiRequest('/inventory/stock-alerts'),\n  updateStock: (id, quantity) => apiRequest(`/inventory/products/${id}/stock`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      quantity\n    })\n  })\n};\n\n// Accounting API\nexport const accountingAPI = {\n  getTransactions: () => apiRequest('/accounting/transactions'),\n  getTransaction: id => apiRequest(`/accounting/transactions/${id}`),\n  createTransaction: transactionData => apiRequest('/accounting/transactions', {\n    method: 'POST',\n    body: JSON.stringify(transactionData)\n  }),\n  updateTransaction: (id, transactionData) => apiRequest(`/accounting/transactions/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(transactionData)\n  }),\n  deleteTransaction: id => apiRequest(`/accounting/transactions/${id}`, {\n    method: 'DELETE'\n  }),\n  getFinancialSummary: () => apiRequest('/accounting/summary'),\n  getInvoices: () => apiRequest('/accounting/invoices'),\n  createInvoice: invoiceData => apiRequest('/accounting/invoices', {\n    method: 'POST',\n    body: JSON.stringify(invoiceData)\n  })\n};\n\n// CRM API\nexport const crmAPI = {\n  getCustomers: () => apiRequest('/crm/customers'),\n  getCustomer: id => apiRequest(`/crm/customers/${id}`),\n  createCustomer: customerData => apiRequest('/crm/customers', {\n    method: 'POST',\n    body: JSON.stringify(customerData)\n  }),\n  updateCustomer: (id, customerData) => apiRequest(`/crm/customers/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(customerData)\n  }),\n  deleteCustomer: id => apiRequest(`/crm/customers/${id}`, {\n    method: 'DELETE'\n  }),\n  getLeads: () => apiRequest('/crm/leads'),\n  getSalesPipeline: () => apiRequest('/crm/pipeline'),\n  updateCustomerStatus: (id, status) => apiRequest(`/crm/customers/${id}/status`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      status\n    })\n  })\n};\n\n// Projects API\nexport const projectsAPI = {\n  getProjects: () => apiRequest('/projects'),\n  getProject: id => apiRequest(`/projects/${id}`),\n  createProject: projectData => apiRequest('/projects', {\n    method: 'POST',\n    body: JSON.stringify(projectData)\n  }),\n  updateProject: (id, projectData) => apiRequest(`/projects/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(projectData)\n  }),\n  deleteProject: id => apiRequest(`/projects/${id}`, {\n    method: 'DELETE'\n  }),\n  getTasks: projectId => apiRequest(projectId ? `/projects/${projectId}/tasks` : '/tasks'),\n  createTask: taskData => apiRequest('/tasks', {\n    method: 'POST',\n    body: JSON.stringify(taskData)\n  }),\n  updateTask: (id, taskData) => apiRequest(`/tasks/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(taskData)\n  })\n};\n\n// Reports API\nexport const reportsAPI = {\n  generateReport: (type, dateRange) => apiRequest('/reports/generate', {\n    method: 'POST',\n    body: JSON.stringify({\n      type,\n      dateRange\n    })\n  }),\n  getReportHistory: () => apiRequest('/reports/history'),\n  exportReport: (reportId, format) => apiRequest(`/reports/${reportId}/export`, {\n    method: 'POST',\n    body: JSON.stringify({\n      format\n    })\n  }),\n  getDashboardData: () => apiRequest('/reports/dashboard'),\n  getAnalytics: type => apiRequest(`/reports/analytics/${type}`)\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getKPIs: () => apiRequest('/dashboard/kpis'),\n  getRecentActivity: () => apiRequest('/dashboard/activity'),\n  getUpcomingEvents: () => apiRequest('/dashboard/events'),\n  getChartData: chartType => apiRequest(`/dashboard/charts/${chartType}`)\n};\nexport default {\n  auth: authAPI,\n  hr: hrAPI,\n  inventory: inventoryAPI,\n  accounting: accountingAPI,\n  crm: crmAPI,\n  projects: projectsAPI,\n  reports: reportsAPI,\n  dashboard: dashboardAPI\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","token","localStorage","getItem","config","headers","Authorization","response","fetch","ok","errorData","json","catch","Error","message","status","error","console","authAPI","login","credentials","method","body","JSON","stringify","register","userData","getProfile","logout","removeItem","hrAPI","getEmployees","getEmployee","id","createEmployee","employeeData","updateEmployee","deleteEmployee","getDepartments","getAttendance","employeeId","inventoryAPI","getProducts","getProduct","createProduct","productData","updateProduct","deleteProduct","getCategories","getStockAlerts","updateStock","quantity","accountingAPI","getTransactions","getTransaction","createTransaction","transactionData","updateTransaction","deleteTransaction","getFinancialSummary","getInvoices","createInvoice","invoiceData","crmAPI","getCustomers","getCustomer","createCustomer","customerData","updateCustomer","deleteCustomer","getLeads","getSalesPipeline","updateCustomerStatus","projectsAPI","getProjects","getProject","createProject","projectData","updateProject","deleteProject","getTasks","projectId","createTask","taskData","updateTask","reportsAPI","generateReport","type","dateRange","getReportHistory","exportReport","reportId","format","getDashboardData","getAnalytics","dashboardAPI","getKPIs","getRecentActivity","getUpcomingEvents","getChartData","chartType","auth","hr","inventory","accounting","crm","projects","reports","dashboard"],"sources":["C:/Users/HP/Desktop/ERP/frontend/src/services/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000/api';\r\n\r\n// Generic API request function\r\nconst apiRequest = async (endpoint: string, options: RequestInit = {}) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const config: RequestInit = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { Authorization: `Bearer ${token}` }),\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials: { email: string; password: string }) =>\r\n    apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials),\r\n    }),\r\n  \r\n  register: (userData: { email: string; password: string; name: string }) =>\r\n    apiRequest('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n    }),\r\n  \r\n  getProfile: () => apiRequest('/auth/profile'),\r\n  \r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n};\r\n\r\n// HR API\r\nexport const hrAPI = {\r\n  getEmployees: () => apiRequest('/hr/employees'),\r\n  \r\n  getEmployee: (id: number) => apiRequest(`/hr/employees/${id}`),\r\n  \r\n  createEmployee: (employeeData: any) =>\r\n    apiRequest('/hr/employees', {\r\n      method: 'POST',\r\n      body: JSON.stringify(employeeData),\r\n    }),\r\n  \r\n  updateEmployee: (id: number, employeeData: any) =>\r\n    apiRequest(`/hr/employees/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(employeeData),\r\n    }),\r\n  \r\n  deleteEmployee: (id: number) =>\r\n    apiRequest(`/hr/employees/${id}`, {\r\n      method: 'DELETE',\r\n    }),\r\n  \r\n  getDepartments: () => apiRequest('/hr/departments'),\r\n  \r\n  getAttendance: (employeeId?: number) => \r\n    apiRequest(employeeId ? `/hr/attendance/${employeeId}` : '/hr/attendance'),\r\n};\r\n\r\n// Inventory API\r\nexport const inventoryAPI = {\r\n  getProducts: () => apiRequest('/inventory/products'),\r\n  \r\n  getProduct: (id: number) => apiRequest(`/inventory/products/${id}`),\r\n  \r\n  createProduct: (productData: any) =>\r\n    apiRequest('/inventory/products', {\r\n      method: 'POST',\r\n      body: JSON.stringify(productData),\r\n    }),\r\n  \r\n  updateProduct: (id: number, productData: any) =>\r\n    apiRequest(`/inventory/products/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(productData),\r\n    }),\r\n  \r\n  deleteProduct: (id: number) =>\r\n    apiRequest(`/inventory/products/${id}`, {\r\n      method: 'DELETE',\r\n    }),\r\n  \r\n  getCategories: () => apiRequest('/inventory/categories'),\r\n  \r\n  getStockAlerts: () => apiRequest('/inventory/stock-alerts'),\r\n  \r\n  updateStock: (id: number, quantity: number) =>\r\n    apiRequest(`/inventory/products/${id}/stock`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({ quantity }),\r\n    }),\r\n};\r\n\r\n// Accounting API\r\nexport const accountingAPI = {\r\n  getTransactions: () => apiRequest('/accounting/transactions'),\r\n  \r\n  getTransaction: (id: number) => apiRequest(`/accounting/transactions/${id}`),\r\n  \r\n  createTransaction: (transactionData: any) =>\r\n    apiRequest('/accounting/transactions', {\r\n      method: 'POST',\r\n      body: JSON.stringify(transactionData),\r\n    }),\r\n  \r\n  updateTransaction: (id: number, transactionData: any) =>\r\n    apiRequest(`/accounting/transactions/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(transactionData),\r\n    }),\r\n  \r\n  deleteTransaction: (id: number) =>\r\n    apiRequest(`/accounting/transactions/${id}`, {\r\n      method: 'DELETE',\r\n    }),\r\n  \r\n  getFinancialSummary: () => apiRequest('/accounting/summary'),\r\n  \r\n  getInvoices: () => apiRequest('/accounting/invoices'),\r\n  \r\n  createInvoice: (invoiceData: any) =>\r\n    apiRequest('/accounting/invoices', {\r\n      method: 'POST',\r\n      body: JSON.stringify(invoiceData),\r\n    }),\r\n};\r\n\r\n// CRM API\r\nexport const crmAPI = {\r\n  getCustomers: () => apiRequest('/crm/customers'),\r\n  \r\n  getCustomer: (id: number) => apiRequest(`/crm/customers/${id}`),\r\n  \r\n  createCustomer: (customerData: any) =>\r\n    apiRequest('/crm/customers', {\r\n      method: 'POST',\r\n      body: JSON.stringify(customerData),\r\n    }),\r\n  \r\n  updateCustomer: (id: number, customerData: any) =>\r\n    apiRequest(`/crm/customers/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(customerData),\r\n    }),\r\n  \r\n  deleteCustomer: (id: number) =>\r\n    apiRequest(`/crm/customers/${id}`, {\r\n      method: 'DELETE',\r\n    }),\r\n  \r\n  getLeads: () => apiRequest('/crm/leads'),\r\n  \r\n  getSalesPipeline: () => apiRequest('/crm/pipeline'),\r\n  \r\n  updateCustomerStatus: (id: number, status: string) =>\r\n    apiRequest(`/crm/customers/${id}/status`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({ status }),\r\n    }),\r\n};\r\n\r\n// Projects API\r\nexport const projectsAPI = {\r\n  getProjects: () => apiRequest('/projects'),\r\n  \r\n  getProject: (id: number) => apiRequest(`/projects/${id}`),\r\n  \r\n  createProject: (projectData: any) =>\r\n    apiRequest('/projects', {\r\n      method: 'POST',\r\n      body: JSON.stringify(projectData),\r\n    }),\r\n  \r\n  updateProject: (id: number, projectData: any) =>\r\n    apiRequest(`/projects/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(projectData),\r\n    }),\r\n  \r\n  deleteProject: (id: number) =>\r\n    apiRequest(`/projects/${id}`, {\r\n      method: 'DELETE',\r\n    }),\r\n  \r\n  getTasks: (projectId?: number) => \r\n    apiRequest(projectId ? `/projects/${projectId}/tasks` : '/tasks'),\r\n  \r\n  createTask: (taskData: any) =>\r\n    apiRequest('/tasks', {\r\n      method: 'POST',\r\n      body: JSON.stringify(taskData),\r\n    }),\r\n  \r\n  updateTask: (id: number, taskData: any) =>\r\n    apiRequest(`/tasks/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(taskData),\r\n    }),\r\n};\r\n\r\n// Reports API\r\nexport const reportsAPI = {\r\n  generateReport: (type: string, dateRange: string) =>\r\n    apiRequest('/reports/generate', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ type, dateRange }),\r\n    }),\r\n  \r\n  getReportHistory: () => apiRequest('/reports/history'),\r\n  \r\n  exportReport: (reportId: number, format: 'pdf' | 'excel') =>\r\n    apiRequest(`/reports/${reportId}/export`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ format }),\r\n    }),\r\n  \r\n  getDashboardData: () => apiRequest('/reports/dashboard'),\r\n  \r\n  getAnalytics: (type: string) => apiRequest(`/reports/analytics/${type}`),\r\n};\r\n\r\n// Dashboard API\r\nexport const dashboardAPI = {\r\n  getKPIs: () => apiRequest('/dashboard/kpis'),\r\n  \r\n  getRecentActivity: () => apiRequest('/dashboard/activity'),\r\n  \r\n  getUpcomingEvents: () => apiRequest('/dashboard/events'),\r\n  \r\n  getChartData: (chartType: string) => apiRequest(`/dashboard/charts/${chartType}`),\r\n};\r\n\r\nexport default {\r\n  auth: authAPI,\r\n  hr: hrAPI,\r\n  inventory: inventoryAPI,\r\n  accounting: accountingAPI,\r\n  crm: crmAPI,\r\n  projects: projectsAPI,\r\n  reports: reportsAPI,\r\n  dashboard: dashboardAPI,\r\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,OAAoB,GAAG,CAAC,CAAC,KAAK;EACxE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,MAAmB,GAAG;IAC1BC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,IAAIJ,KAAK,IAAI;QAAEK,aAAa,EAAE,UAAUL,KAAK;MAAG,CAAC,CAAC;MAClD,GAAGD,OAAO,CAACK;IACb,CAAC;IACD,GAAGL;EACL,CAAC;EAED,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,YAAY,GAAGK,QAAQ,EAAE,EAAEK,MAAM,CAAC;IAElE,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MACzD,MAAM,IAAIC,KAAK,CAACH,SAAS,CAACI,OAAO,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAAE,CAAC;IAChF;IAEA,OAAO,MAAMR,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAgD,IACtDtB,UAAU,CAAC,aAAa,EAAE;IACxBuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;EAClC,CAAC,CAAC;EAEJK,QAAQ,EAAGC,QAA2D,IACpE5B,UAAU,CAAC,gBAAgB,EAAE;IAC3BuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,QAAQ;EAC/B,CAAC,CAAC;EAEJC,UAAU,EAAEA,CAAA,KAAM7B,UAAU,CAAC,eAAe,CAAC;EAE7C8B,MAAM,EAAEA,CAAA,KAAM;IACZ1B,YAAY,CAAC2B,UAAU,CAAC,OAAO,CAAC;IAChC3B,YAAY,CAAC2B,UAAU,CAAC,MAAM,CAAC;EACjC;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG;EACnBC,YAAY,EAAEA,CAAA,KAAMjC,UAAU,CAAC,eAAe,CAAC;EAE/CkC,WAAW,EAAGC,EAAU,IAAKnC,UAAU,CAAC,iBAAiBmC,EAAE,EAAE,CAAC;EAE9DC,cAAc,EAAGC,YAAiB,IAChCrC,UAAU,CAAC,eAAe,EAAE;IAC1BuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,YAAY;EACnC,CAAC,CAAC;EAEJC,cAAc,EAAEA,CAACH,EAAU,EAAEE,YAAiB,KAC5CrC,UAAU,CAAC,iBAAiBmC,EAAE,EAAE,EAAE;IAChCZ,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,YAAY;EACnC,CAAC,CAAC;EAEJE,cAAc,EAAGJ,EAAU,IACzBnC,UAAU,CAAC,iBAAiBmC,EAAE,EAAE,EAAE;IAChCZ,MAAM,EAAE;EACV,CAAC,CAAC;EAEJiB,cAAc,EAAEA,CAAA,KAAMxC,UAAU,CAAC,iBAAiB,CAAC;EAEnDyC,aAAa,EAAGC,UAAmB,IACjC1C,UAAU,CAAC0C,UAAU,GAAG,kBAAkBA,UAAU,EAAE,GAAG,gBAAgB;AAC7E,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,WAAW,EAAEA,CAAA,KAAM5C,UAAU,CAAC,qBAAqB,CAAC;EAEpD6C,UAAU,EAAGV,EAAU,IAAKnC,UAAU,CAAC,uBAAuBmC,EAAE,EAAE,CAAC;EAEnEW,aAAa,EAAGC,WAAgB,IAC9B/C,UAAU,CAAC,qBAAqB,EAAE;IAChCuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACqB,WAAW;EAClC,CAAC,CAAC;EAEJC,aAAa,EAAEA,CAACb,EAAU,EAAEY,WAAgB,KAC1C/C,UAAU,CAAC,uBAAuBmC,EAAE,EAAE,EAAE;IACtCZ,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACqB,WAAW;EAClC,CAAC,CAAC;EAEJE,aAAa,EAAGd,EAAU,IACxBnC,UAAU,CAAC,uBAAuBmC,EAAE,EAAE,EAAE;IACtCZ,MAAM,EAAE;EACV,CAAC,CAAC;EAEJ2B,aAAa,EAAEA,CAAA,KAAMlD,UAAU,CAAC,uBAAuB,CAAC;EAExDmD,cAAc,EAAEA,CAAA,KAAMnD,UAAU,CAAC,yBAAyB,CAAC;EAE3DoD,WAAW,EAAEA,CAACjB,EAAU,EAAEkB,QAAgB,KACxCrD,UAAU,CAAC,uBAAuBmC,EAAE,QAAQ,EAAE;IAC5CZ,MAAM,EAAE,OAAO;IACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAE2B;IAAS,CAAC;EACnC,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,eAAe,EAAEA,CAAA,KAAMvD,UAAU,CAAC,0BAA0B,CAAC;EAE7DwD,cAAc,EAAGrB,EAAU,IAAKnC,UAAU,CAAC,4BAA4BmC,EAAE,EAAE,CAAC;EAE5EsB,iBAAiB,EAAGC,eAAoB,IACtC1D,UAAU,CAAC,0BAA0B,EAAE;IACrCuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACgC,eAAe;EACtC,CAAC,CAAC;EAEJC,iBAAiB,EAAEA,CAACxB,EAAU,EAAEuB,eAAoB,KAClD1D,UAAU,CAAC,4BAA4BmC,EAAE,EAAE,EAAE;IAC3CZ,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACgC,eAAe;EACtC,CAAC,CAAC;EAEJE,iBAAiB,EAAGzB,EAAU,IAC5BnC,UAAU,CAAC,4BAA4BmC,EAAE,EAAE,EAAE;IAC3CZ,MAAM,EAAE;EACV,CAAC,CAAC;EAEJsC,mBAAmB,EAAEA,CAAA,KAAM7D,UAAU,CAAC,qBAAqB,CAAC;EAE5D8D,WAAW,EAAEA,CAAA,KAAM9D,UAAU,CAAC,sBAAsB,CAAC;EAErD+D,aAAa,EAAGC,WAAgB,IAC9BhE,UAAU,CAAC,sBAAsB,EAAE;IACjCuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACsC,WAAW;EAClC,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG;EACpBC,YAAY,EAAEA,CAAA,KAAMlE,UAAU,CAAC,gBAAgB,CAAC;EAEhDmE,WAAW,EAAGhC,EAAU,IAAKnC,UAAU,CAAC,kBAAkBmC,EAAE,EAAE,CAAC;EAE/DiC,cAAc,EAAGC,YAAiB,IAChCrE,UAAU,CAAC,gBAAgB,EAAE;IAC3BuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC2C,YAAY;EACnC,CAAC,CAAC;EAEJC,cAAc,EAAEA,CAACnC,EAAU,EAAEkC,YAAiB,KAC5CrE,UAAU,CAAC,kBAAkBmC,EAAE,EAAE,EAAE;IACjCZ,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC2C,YAAY;EACnC,CAAC,CAAC;EAEJE,cAAc,EAAGpC,EAAU,IACzBnC,UAAU,CAAC,kBAAkBmC,EAAE,EAAE,EAAE;IACjCZ,MAAM,EAAE;EACV,CAAC,CAAC;EAEJiD,QAAQ,EAAEA,CAAA,KAAMxE,UAAU,CAAC,YAAY,CAAC;EAExCyE,gBAAgB,EAAEA,CAAA,KAAMzE,UAAU,CAAC,eAAe,CAAC;EAEnD0E,oBAAoB,EAAEA,CAACvC,EAAU,EAAElB,MAAc,KAC/CjB,UAAU,CAAC,kBAAkBmC,EAAE,SAAS,EAAE;IACxCZ,MAAM,EAAE,OAAO;IACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET;IAAO,CAAC;EACjC,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAM0D,WAAW,GAAG;EACzBC,WAAW,EAAEA,CAAA,KAAM5E,UAAU,CAAC,WAAW,CAAC;EAE1C6E,UAAU,EAAG1C,EAAU,IAAKnC,UAAU,CAAC,aAAamC,EAAE,EAAE,CAAC;EAEzD2C,aAAa,EAAGC,WAAgB,IAC9B/E,UAAU,CAAC,WAAW,EAAE;IACtBuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACqD,WAAW;EAClC,CAAC,CAAC;EAEJC,aAAa,EAAEA,CAAC7C,EAAU,EAAE4C,WAAgB,KAC1C/E,UAAU,CAAC,aAAamC,EAAE,EAAE,EAAE;IAC5BZ,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACqD,WAAW;EAClC,CAAC,CAAC;EAEJE,aAAa,EAAG9C,EAAU,IACxBnC,UAAU,CAAC,aAAamC,EAAE,EAAE,EAAE;IAC5BZ,MAAM,EAAE;EACV,CAAC,CAAC;EAEJ2D,QAAQ,EAAGC,SAAkB,IAC3BnF,UAAU,CAACmF,SAAS,GAAG,aAAaA,SAAS,QAAQ,GAAG,QAAQ,CAAC;EAEnEC,UAAU,EAAGC,QAAa,IACxBrF,UAAU,CAAC,QAAQ,EAAE;IACnBuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC2D,QAAQ;EAC/B,CAAC,CAAC;EAEJC,UAAU,EAAEA,CAACnD,EAAU,EAAEkD,QAAa,KACpCrF,UAAU,CAAC,UAAUmC,EAAE,EAAE,EAAE;IACzBZ,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC2D,QAAQ;EAC/B,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG;EACxBC,cAAc,EAAEA,CAACC,IAAY,EAAEC,SAAiB,KAC9C1F,UAAU,CAAC,mBAAmB,EAAE;IAC9BuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAE+D,IAAI;MAAEC;IAAU,CAAC;EAC1C,CAAC,CAAC;EAEJC,gBAAgB,EAAEA,CAAA,KAAM3F,UAAU,CAAC,kBAAkB,CAAC;EAEtD4F,YAAY,EAAEA,CAACC,QAAgB,EAAEC,MAAuB,KACtD9F,UAAU,CAAC,YAAY6F,QAAQ,SAAS,EAAE;IACxCtE,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEoE;IAAO,CAAC;EACjC,CAAC,CAAC;EAEJC,gBAAgB,EAAEA,CAAA,KAAM/F,UAAU,CAAC,oBAAoB,CAAC;EAExDgG,YAAY,EAAGP,IAAY,IAAKzF,UAAU,CAAC,sBAAsByF,IAAI,EAAE;AACzE,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAG;EAC1BC,OAAO,EAAEA,CAAA,KAAMlG,UAAU,CAAC,iBAAiB,CAAC;EAE5CmG,iBAAiB,EAAEA,CAAA,KAAMnG,UAAU,CAAC,qBAAqB,CAAC;EAE1DoG,iBAAiB,EAAEA,CAAA,KAAMpG,UAAU,CAAC,mBAAmB,CAAC;EAExDqG,YAAY,EAAGC,SAAiB,IAAKtG,UAAU,CAAC,qBAAqBsG,SAAS,EAAE;AAClF,CAAC;AAED,eAAe;EACbC,IAAI,EAAEnF,OAAO;EACboF,EAAE,EAAExE,KAAK;EACTyE,SAAS,EAAE9D,YAAY;EACvB+D,UAAU,EAAEpD,aAAa;EACzBqD,GAAG,EAAE1C,MAAM;EACX2C,QAAQ,EAAEjC,WAAW;EACrBkC,OAAO,EAAEtB,UAAU;EACnBuB,SAAS,EAAEb;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}