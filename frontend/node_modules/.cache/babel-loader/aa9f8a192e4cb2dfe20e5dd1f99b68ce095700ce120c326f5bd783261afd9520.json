{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ERP\\\\frontend\\\\src\\\\store\\\\auth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (email, password) => {\n    console.log('Auth context: Making login request...');\n    const res = await axios.post('/api/auth/login', {\n      email,\n      password\n    });\n    console.log('Auth context: Login response received:', res.data);\n    const data = res.data;\n    setToken(data.token);\n    setUser(data.user);\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('user', JSON.stringify(data.user));\n    console.log('Auth context: Login successful, state updated');\n  };\n  const register = async (email, password, role) => {\n    const res = await axios.post('/api/auth/register', {\n      email,\n      password,\n      role\n    });\n    const data = res.data;\n    setToken(data.token);\n    setUser(data.user);\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('user', JSON.stringify(data.user));\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"cANLe8RtnwDE5y1hInrXoZDdgy8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n  return ctx;\n};\n_s2(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","storedToken","localStorage","getItem","storedUser","JSON","parse","login","email","password","console","log","res","post","data","setItem","stringify","register","role","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","ctx","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ERP/frontend/src/store/auth.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (email: string, password: string, role: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedToken && storedUser) {\r\n      setToken(storedToken);\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    console.log('Auth context: Making login request...');\r\n    const res = await axios.post('/api/auth/login', { email, password });\r\n    console.log('Auth context: Login response received:', res.data);\r\n    const data = res.data as { token: string; user: User };\r\n    setToken(data.token);\r\n    setUser(data.user);\r\n    localStorage.setItem('token', data.token);\r\n    localStorage.setItem('user', JSON.stringify(data.user));\r\n    console.log('Auth context: Login successful, state updated');\r\n  };\r\n\r\n  const register = async (email: string, password: string, role: string) => {\r\n    const res = await axios.post('/api/auth/register', { email, password, role });\r\n    const data = res.data as { token: string; user: User };\r\n    setToken(data.token);\r\n    setUser(data.user);\r\n    localStorage.setItem('token', data.token);\r\n    localStorage.setItem('user', JSON.stringify(data.user));\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB1B,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,WAAW,IAAIG,UAAU,EAAE;MAC7BJ,QAAQ,CAACC,WAAW,CAAC;MACrBH,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvDC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpD,MAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,iBAAiB,EAAE;MAAEL,KAAK;MAAEC;IAAS,CAAC,CAAC;IACpEC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEC,GAAG,CAACE,IAAI,CAAC;IAC/D,MAAMA,IAAI,GAAGF,GAAG,CAACE,IAAqC;IACtDd,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACpBD,OAAO,CAACgB,IAAI,CAACjB,IAAI,CAAC;IAClBK,YAAY,CAACa,OAAO,CAAC,OAAO,EAAED,IAAI,CAACf,KAAK,CAAC;IACzCG,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,IAAI,CAACjB,IAAI,CAAC,CAAC;IACvDa,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAC9D,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAAA,CAAOT,KAAa,EAAEC,QAAgB,EAAES,IAAY,KAAK;IACxE,MAAMN,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,oBAAoB,EAAE;MAAEL,KAAK;MAAEC,QAAQ;MAAES;IAAK,CAAC,CAAC;IAC7E,MAAMJ,IAAI,GAAGF,GAAG,CAACE,IAAqC;IACtDd,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACpBD,OAAO,CAACgB,IAAI,CAACjB,IAAI,CAAC;IAClBK,YAAY,CAACa,OAAO,CAAC,OAAO,EAAED,IAAI,CAACf,KAAK,CAAC;IACzCG,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,IAAI,CAACjB,IAAI,CAAC,CAAC;EACzD,CAAC;EAED,MAAMsB,MAAM,GAAGA,CAAA,KAAM;IACnBnB,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IAChClB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEE,KAAK;MAAEQ,KAAK;MAAEU,QAAQ;MAAEE;IAAO,CAAE;IAAAxB,QAAA,EACnEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CA9CWF,YAAqD;AAAAiC,EAAA,GAArDjC,YAAqD;AAgDlE,OAAO,MAAMkC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,GAAG,GAAG5C,UAAU,CAACM,WAAW,CAAC;EACnC,IAAI,CAACsC,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACrE,OAAOD,GAAG;AACZ,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}